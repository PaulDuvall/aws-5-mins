---
Description: Amazon CloudWatch Synthetics demo. Parts from https://github.com/zcapper/aws-snippets/
Parameters: 
  TestUrl: 
    Description: The URL to test
    Type: String
    Default: "http://www.integratebutton.com/"
  CanaryName: 
    Description: Name of the canary test
    Type: String
    Default: aws-5-mins-canary
Resources:
  CloudWatchSyntheticsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${AWS::StackName}-${AWS::Region}
      Description: CloudWatch Synthetics lambda execution role for running canaries
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
            Condition: {}
  RolePermissions:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - Ref: CloudWatchSyntheticsRole
      PolicyName:
        Fn::Sub: CloudWatchSyntheticsPolicy-${AWS::Region}
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetBucketLocation
            Resource:
              - Fn::Sub: arn:aws:s3:::${ResultsBucket}/*
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:CreateLogGroup
            Resource: '*'
          - Effect: Allow
            Action:
              - s3:ListAllMyBuckets
            Resource: '*'
          - Effect: Allow
            Resource: '*'
            Action: cloudwatch:PutMetricData
            Condition:
              StringEquals:
                cloudwatch:namespace: CloudWatchSynthetics
  ResultsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName:
        Fn::Sub: ${AWS::StackName}-results-${AWS::AccountId}-${AWS::Region}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  CodeBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName:
        Fn::Sub: ${AWS::StackName}-code-${AWS::AccountId}-${AWS::Region}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 180
            Status: Enabled
  SyntheticsCanary:
    Type: AWS::Synthetics::Canary
    Properties:
      Name: !Ref CanaryName
      ExecutionRoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${CloudWatchSyntheticsRole}
      Code:
        Handler: pageLoadBlueprint.handler
        Script: !Sub |
          var synthetics = require('Synthetics');
          const log = require('SyntheticsLogger');
          const pageLoadBlueprint = async function () {
          // INSERT URL here
          const URL = "${TestUrl}";

          let page = await synthetics.getPage();
          const response = await page.goto(URL, {waitUntil: 'domcontentloaded', timeout: 30000});
          //Wait for page to render.
          //Increase or decrease wait time based on endpoint being monitored.
          await page.waitFor(15000);
          await synthetics.takeScreenshot('loaded', 'loaded');
          let pageTitle = await page.title();
          log.info('Page title: ' + pageTitle);
          if (response.status() !== 200) {
               throw "Failed to load page!";
          }
          };

          exports.handler = async () => {
          return await pageLoadBlueprint();
          };
      ArtifactS3Location: !Sub s3://${ResultsBucket}
      RuntimeVersion: syn-nodejs-puppeteer-3.0
      Schedule:
        Expression: rate(1 hour)
        DurationInSeconds: 3600
      RunConfig:
        TimeoutInSeconds: 60
      FailureRetentionPeriod: 30
      SuccessRetentionPeriod: 30
      Tags:
      - Key: key00AtCreate
        Value: value001AtCreate
      StartCanaryAfterCreation: true
Outputs:
  CanaryUrl:
    Value: !Sub https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#synthetics:canary/detail/${CanaryName}
    Description: CodePipeline URL