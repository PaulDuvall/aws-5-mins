---
Description: Demo of provisioning AWS Network Firewall
AWSTemplateFormatVersion: '2010-09-09'
Mappings:
  RegionMap:
    us-east-1:
      execution: ami-0915e09cc7ceee3ab
      ecs: ami-08087103f9850bddd
Resources:
  SampleVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-vpc"
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SampleVPC
      CidrBlock: 172.0.0.0/20
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-subnet1"
  SecurityGroup1:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all ingress and egress traffic
      VpcId: !Ref SampleVPC
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: "-1"
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-SecurityGroup1"
  SecurityGroup2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all egress traffic
      VpcId: !Ref SampleVPC
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-SecurityGroup2"
  InstanceA:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - execution
      InstanceType: t3.nano
      SubnetId:
        Ref: Subnet1
      SecurityGroupIds:
      - Ref: SecurityGroup1
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-InstanceA"
  InstanceB:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - execution
      InstanceType: t3.nano
      SubnetId:
        Ref: Subnet1
      SecurityGroupIds:
      - Ref: SecurityGroup1
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-InstanceB"
  InstanceC:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - execution
      InstanceType: t3.nano
      SubnetId:
        Ref: Subnet1
      SecurityGroupIds:
      - Ref: SecurityGroup2
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-InstanceC"
  SampleFirewall:
    Type: AWS::NetworkFirewall::Firewall
    Properties:
      FirewallName: network-firewall
      FirewallPolicyArn: !Ref SampleFirewallPolicy
      VpcId: !Ref SampleVPC
      SubnetMappings:
        - SubnetId: !Ref Subnet1
      Description: Network Firewall definition
  SampleFirewallPolicy:
    Type: 'AWS::NetworkFirewall::FirewallPolicy'
    Properties:
      FirewallPolicyName: firewall-policy
      FirewallPolicy:
        StatelessDefaultActions:
          - 'aws:pass'
        StatelessFragmentDefaultActions:
          - 'aws:drop'
        StatefulRuleGroupReferences:
          - ResourceArn: !Ref SampleStatefulRuleGroup
        StatelessRuleGroupReferences:
          - ResourceArn: !Ref SampleStatelessRuleGroup
            Priority: 100
      Description: FirewallPolicy for aws-5-mins example
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-firewall-policy"
  SampleStatelessRuleGroup:
    Type: AWS::NetworkFirewall::RuleGroup
    Properties:
      RuleGroupName: aws-5-mins-stateless-rule-group
      Type: STATELESS
      RuleGroup:
        RulesSource:
          StatelessRulesAndCustomActions:
            StatelessRules:
            - RuleDefinition:
                MatchAttributes:
                  Sources:
                  - AddressDefinition: 0.0.0.0/0
                  Destinations:
                  - AddressDefinition: 172.0.0.0/16
                  SourcePorts:
                  - FromPort: 15000
                    ToPort: 30000
                  DestinationPorts:
                  - FromPort: 443
                    ToPort: 443
                  Protocols:
                  - 6
                Actions:
                - aws:pass
              Priority: 1
      Capacity: 100
      Description: Stateless Rulegroup Definition for aws-5-mins example
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-stateless-rulegroup"
  SampleStatefulRuleGroup:
    Type: AWS::NetworkFirewall::RuleGroup
    Properties:
      RuleGroupName: aws-5-mins-stateful-rule-group
      Type: STATEFUL
      RuleGroup:
        RulesSource:
          RulesString: pass tcp 10.20.20.0/24 45400:45500 <> 10.10.10.0/24 5203 (msg:"test";sid:1;rev:1;)
      Capacity: 100
      Description: Stateful Rulegroup Definition for aws-5-mins example
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-stateful-rulegroup"

Outputs:
  InstanceA:
    Description: EC2 Instance ID for InstanceA
    Value: !Ref InstanceA
    Export:
      Name: !Sub InstanceA-${AWS::Region}
  InstanceB:
    Description: EC2 Instance ID for InstanceB
    Value: !Ref InstanceB
    Export:
      Name: !Sub InstanceB-${AWS::Region}
  InstanceC:
    Description: EC2 Instance ID for InstanceC
    Value: !Ref InstanceC
    Export:
      Name: !Sub InstanceC-${AWS::Region}